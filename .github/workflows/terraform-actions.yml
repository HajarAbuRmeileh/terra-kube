name: 'Terraform'
 
on:
  push:
    branches:
    - main
  pull_request:
 
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
 
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.1.9
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: "./infra"
         
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.1.9
        run: |
         terraform init -migrate-state
        tf_actions_working_dir: "./infra"
 
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.1.9
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./infra"
         
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.1.9
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./infra"
 
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.1.9
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./infra"


  kubernateds:
    runs-on: ubuntu-latest
    needs: terraform
    env:
      env-file: my-environment-file.env
      CLUSTER_NAME: helloppucluster
      RESOURSE_GROUP: hajarhello
   
    
    steps:

      - uses: actions/checkout@v3
      - uses: azure/login@v1
        name: Azure login
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - uses: azure/use-kubelogin@v1
        name: Set up kubelogin for non-interactive login
        with:
          kubelogin-version: v0.0.25
      - uses: azure/aks-set-context@v3
        name: Get K8s context
        with:
          admin: "false"
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.RESOURSE_GROUP }}
          use-kubelogin: "true"
          
      - uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            kubernetes/deploy.yml
          images: |
            hajaraburmeileh/hello:latest


#hajaraburmeileh/simplecalc:${{ github.sha }}
